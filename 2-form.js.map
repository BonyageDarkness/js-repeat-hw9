{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.feedback-form');\nconst email = form.elements.email;\nconst message = form.elements.message;\n\n//  Создаём строку, которая будет использоваться как имя ключа в localStorage\nconst localStorageKey = 'feedback-form-state';\n\n// Метод позволяет читать из storage и возвращает в json формате\nconst savedSettings = localStorage.getItem(localStorageKey);\nconsole.log(savedSettings);\n// Метод JSON.parse переводит строку из localStorage обратно в объект или массив\n// Затем мы вставляем сохранённые значения в поля формы, чтобы восстановить введённые ранее данные\nif (savedSettings) {\n  const parsedSettings = JSON.parse(savedSettings);\n  email.value = parsedSettings.email;\n  message.value = parsedSettings.message;\n}\n\nform.addEventListener('input', evt => {\n  // Получаем имя поля, которое было изменено (например, 'email' или 'message')\n  const key = evt.target.name;\n\n  // Читаем текущие сохранённые данные из localStorage и парсим их в объект\n  // Если данных нет — создаём пустой объект\n  const saved = JSON.parse(localStorage.getItem(localStorageKey)) || {};\n\n  // Обновляем объект новым значением из изменённого поля\n  // Например: saved.email = 'новое значение'\n  saved[key] = evt.target.value;\n\n  // Сохраняем обновлённый объект обратно в localStorage как строку\n  localStorage.setItem(localStorageKey, JSON.stringify(saved));\n});\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  if (\n    form.elements.message.value.trim() === '' ||\n    form.elements.email.value.trim() === ''\n  ) {\n    return alert('Fill please all fields');\n  }\n  console.log(evt.target.elements.email.value);\n  console.log(evt.target.elements.message.value);\n  // Очищаются поля после отправки формы\n  form.reset();\n  // Очищается хранилище\n  localStorage.removeItem(localStorageKey);\n});\n"],"names":["form","email","message","localStorageKey","savedSettings","parsedSettings","evt","key","saved"],"mappings":"wFAKA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAQD,EAAK,SAAS,MACtBE,EAAUF,EAAK,SAAS,QAGxBG,EAAkB,sBAGlBC,EAAgB,aAAa,QAAQD,CAAe,EAC1D,QAAQ,IAAIC,CAAa,EAGzB,GAAIA,EAAe,CACjB,MAAMC,EAAiB,KAAK,MAAMD,CAAa,EAC/CH,EAAM,MAAQI,EAAe,MAC7BH,EAAQ,MAAQG,EAAe,OACjC,CAEAL,EAAK,iBAAiB,QAASM,GAAO,CAEpC,MAAMC,EAAMD,EAAI,OAAO,KAIjBE,EAAQ,KAAK,MAAM,aAAa,QAAQL,CAAe,CAAC,GAAK,CAAA,EAInEK,EAAMD,CAAG,EAAID,EAAI,OAAO,MAGxB,aAAa,QAAQH,EAAiB,KAAK,UAAUK,CAAK,CAAC,CAC7D,CAAC,EAEDR,EAAK,iBAAiB,SAAUM,GAAO,CAErC,GADAA,EAAI,eAAc,EAEhBN,EAAK,SAAS,QAAQ,MAAM,KAAI,IAAO,IACvCA,EAAK,SAAS,MAAM,MAAM,KAAI,IAAO,GAErC,OAAO,MAAM,wBAAwB,EAEvC,QAAQ,IAAIM,EAAI,OAAO,SAAS,MAAM,KAAK,EAC3C,QAAQ,IAAIA,EAAI,OAAO,SAAS,QAAQ,KAAK,EAE7CN,EAAK,MAAK,EAEV,aAAa,WAAWG,CAAe,CACzC,CAAC"}